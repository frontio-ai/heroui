[
  {
    "attribute": "children*",
    "type": "ReactNode[]",
    "description": "The children to render. Usually a list of AutocompleteItem and AutocompleteSection elements.",
    "default": "-"
  },
  {
    "attribute": "label",
    "type": "ReactNode",
    "description": "The content to display as the label.",
    "default": "-"
  },
  {
    "attribute": "name",
    "type": "string",
    "description": "The name of the input element, used when submitting an HTML form.",
    "default": "-"
  },
  {
    "attribute": "variant",
    "type": "flat | bordered | faded | underlined",
    "description": "The variant of the Autocomplete.",
    "default": "flat"
  },
  {
    "attribute": "color",
    "type": "default | primary | secondary | success | warning | danger",
    "description": "The color of the Autocomplete.",
    "default": "default"
  },
  {
    "attribute": "size",
    "type": "sm | md | lg",
    "description": "The size of the Autocomplete.",
    "default": "md"
  },
  {
    "attribute": "radius",
    "type": "none | sm | md | lg | full",
    "description": "The radius of the Autocomplete.",
    "default": "-"
  },
  {
    "attribute": "items",
    "type": "Iterable<T>",
    "description": "The list of Autocomplete items. (controlled)",
    "default": "-"
  },
  {
    "attribute": "defaultItems",
    "type": "Iterable<T>",
    "description": "The list of Autocomplete items (uncontrolled).",
    "default": "-"
  },
  {
    "attribute": "inputValue",
    "type": "string",
    "description": "The value of the Autocomplete input (controlled).",
    "default": "-"
  },
  {
    "attribute": "defaultInputValue",
    "type": "string",
    "description": "The value of the Autocomplete input (uncontrolled).",
    "default": "-"
  },
  {
    "attribute": "allowsCustomValue",
    "type": "boolean",
    "description": "Whether the Autocomplete allows a non-item matching input value to be set.",
    "default": "false"
  },
  {
    "attribute": "allowsEmptyCollection",
    "type": "boolean",
    "description": "Whether the autocomplete allows the menu to be open when the collection is empty.",
    "default": "true"
  },
  {
    "attribute": "shouldCloseOnBlur",
    "type": "boolean",
    "description": "Whether the Autocomplete should close when the input is blurred.",
    "default": "true"
  },
  {
    "attribute": "placeholder",
    "type": "string",
    "description": "Temporary text that occupies the text input when it is empty.",
    "default": "-"
  },
  {
    "attribute": "description",
    "type": "ReactNode",
    "description": "A description for the field. Provides a hint such as specific requirements for what to choose.",
    "default": "-"
  },
  {
    "attribute": "menuTrigger",
    "type": "focus | input | manual",
    "description": "The action that causes the menu to open.",
    "default": "focus"
  },
  {
    "attribute": "labelPlacement",
    "type": "inside | outside | outside-left",
    "description": "The position of the label.",
    "default": "inside"
  },
  {
    "attribute": "selectedKey",
    "type": "React.Key",
    "description": "The currently selected key in the collection (controlled).",
    "default": "-"
  },
  {
    "attribute": "defaultSelectedKey",
    "type": "React.Key",
    "description": "The initial selected key in the collection (uncontrolled).",
    "default": "-"
  },
  {
    "attribute": "disabledKeys",
    "type": "all | React.Key[]",
    "description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
    "default": "-"
  },
  {
    "attribute": "errorMessage",
    "type": "ReactNode | ((v: ValidationResult) => ReactNode)",
    "description": "An error message to display below the field.",
    "default": "-"
  },
  {
    "attribute": "validate",
    "type": "(value: { inputValue: string, selectedKey: React.Key }) => ValidationError | true | null | undefined",
    "description": "Validate input values when committing (e.g. on blur), and return error messages for invalid values.",
    "default": "-"
  },
  {
    "attribute": "validationBehavior",
    "type": "native | aria",
    "description": "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
    "default": "native"
  },
  {
    "attribute": "startContent",
    "type": "ReactNode",
    "description": "Element to be rendered in the left side of the Autocomplete.",
    "default": "-"
  },
  {
    "attribute": "endContent",
    "type": "ReactNode",
    "description": "Element to be rendered in the right side of the Autocomplete.",
    "default": "-"
  },
  {
    "attribute": "autoFocus",
    "type": "boolean",
    "description": "Whether the Autocomplete should be focused on render.",
    "default": "false"
  },
  {
    "attribute": "defaultFilter",
    "type": "(textValue: string, inputValue: string) => boolean",
    "description": "The filter function used to determine if a option should be included in the Autocomplete list.",
    "default": "-"
  },
  {
    "attribute": "filterOptions",
    "type": "Intl.CollatorOptions",
    "description": "The options used to create the collator used for filtering.",
    "default": "{ sensitivity: 'base'}"
  },
  {
    "attribute": "maxListboxHeight",
    "type": "number",
    "description": "The maximum height of the listbox in pixels. Required when using virtualization.",
    "default": "256"
  },
  {
    "attribute": "itemHeight",
    "type": "number",
    "description": "The fixed height of each item in pixels. Required when using virtualization.",
    "default": "32"
  },
  {
    "attribute": "isVirtualized",
    "type": "boolean",
    "description": "Whether to enable virtualization. By default, it's enabled when the number of items exceeds 50.",
    "default": "undefined"
  },
  {
    "attribute": "isReadOnly",
    "type": "boolean",
    "description": "Whether the Autocomplete is read only.",
    "default": "false"
  },
  {
    "attribute": "isRequired",
    "type": "boolean",
    "description": "Whether the Autocomplete is required.",
    "default": "false"
  },
  {
    "attribute": "isInvalid",
    "type": "boolean",
    "description": "Whether the Autocomplete is invalid.",
    "default": "false"
  },
  {
    "attribute": "isDisabled",
    "type": "boolean",
    "description": "Whether the Autocomplete is disabled.",
    "default": "false"
  },
  {
    "attribute": "fullWidth",
    "type": "boolean",
    "description": "Whether the input should take up the width of its parent.",
    "default": "true"
  },
  {
    "attribute": "selectorIcon",
    "type": "ReactNode",
    "description": "The icon that represents the autocomplete open state. Usually a chevron icon.",
    "default": "-"
  },
  {
    "attribute": "clearIcon",
    "type": "ReactNode",
    "description": "The icon to be used in the clear button. Usually a cross icon.",
    "default": "-"
  },
  {
    "attribute": "showScrollIndicators",
    "type": "boolean",
    "description": "Whether the scroll indicators should be shown when the listbox is scrollable.",
    "default": "true"
  },
  {
    "attribute": "scrollRef",
    "type": "React.RefObject<HTMLElement>",
    "description": "A ref to the scrollable element.",
    "default": "-"
  },
  {
    "attribute": "inputProps",
    "type": "InputProps",
    "description": "Props to be passed to the Input component.",
    "default": "-"
  },
  {
    "attribute": "popoverProps",
    "type": "PopoverProps",
    "description": "Props to be passed to the Popover component.",
    "default": "-"
  },
  {
    "attribute": "listboxProps",
    "type": "ListboxProps",
    "description": "Props to be passed to the Listbox component.",
    "default": "-"
  },
  {
    "attribute": "scrollShadowProps",
    "type": "ScrollShadowProps",
    "description": "Props to be passed to the ScrollShadow component.",
    "default": "-"
  },
  {
    "attribute": "selectorButtonProps",
    "type": "ButtonProps",
    "description": "Props to be passed to the selector button.",
    "default": "-"
  },
  {
    "attribute": "clearButtonProps",
    "type": "ButtonProps",
    "description": "Props to be passed to the clear button.",
    "default": "-"
  },
  {
    "attribute": "isClearable",
    "type": "boolean",
    "description": "Whether the clear button should be shown.",
    "default": "true"
  },
  {
    "attribute": "disableClearable",
    "type": "boolean",
    "description": "Whether the clear button should be hidden. (Deprecated) Use isClearable instead.",
    "default": "false"
  },
  {
    "attribute": "disableAnimation",
    "type": "boolean",
    "description": "Whether the Autocomplete should be animated.",
    "default": "true"
  },
  {
    "attribute": "disableSelectorIconRotation",
    "type": "boolean",
    "description": "Whether the select should disable the rotation of the selector icon.",
    "default": "false"
  },
  {
    "attribute": "classNames",
    "type": "Partial<Record<'base' | 'listboxWrapper' | 'listbox' | 'popoverContent' | 'endContentWrapper' | 'clearButton' | 'selectorButton', string>>",
    "description": "Allows to set custom class names for the Autocomplete slots.",
    "default": "-"
  }
]