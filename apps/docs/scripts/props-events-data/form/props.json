[
  {
    "attribute": "children",
    "type": "ReactNode",
    "description": "The wrapped component.",
    "default": "-"
  },
  {
    "attribute": "validationBehavior",
    "type": "'native' | 'aria'",
    "description": "Whether to use native HTML form validation to prevent form submission when a field value is missing or invalid, or mark fields as required or invalid via ARIA.",
    "default": "aria"
  },
  {
    "attribute": "validationErrors",
    "type": "Record<string, string | string[]>",
    "description": "Validation errors for the form, typically returned by a server. This should be set to an object mapping from input names to errors.",
    "default": "-"
  },
  {
    "attribute": "action",
    "type": "string | FormHTMLAttributes<HTMLFormElement>['action']",
    "description": "Where to send the form-data when the form is submitted. See MDN.",
    "default": "-"
  },
  {
    "attribute": "encType",
    "type": "'application/x-www-form-urlencoded' | 'multipart/form-data' | 'text/plain'",
    "description": "The enctype attribute specifies how the form-data should be encoded when submitting it to the server. See MDN.",
    "default": "-"
  },
  {
    "attribute": "method",
    "type": "'get' | 'post' | 'dialog'",
    "description": "The HTTP method to submit the form with. See MDN.",
    "default": "-"
  },
  {
    "attribute": "target",
    "type": "'_blank' | '_self' | '_parent' | '_top'",
    "description": "The target attribute specifies a name or a keyword that indicates where to display the response that is received after submitting the form. See MDN.",
    "default": "-"
  },
  {
    "attribute": "autoComplete",
    "type": "'off' | 'on'",
    "description": "Indicates whether input elements can by default have their values automatically completed by the browser. See MDN.",
    "default": "-"
  },
  {
    "attribute": "autoCapitalize",
    "type": "'off' | 'none' | 'on' | 'sentences' | 'words' | 'characters'",
    "description": "Controls whether inputted text is automatically capitalized and, if so, in what manner. See MDN.",
    "default": "-"
  },
  {
    "attribute": "className",
    "type": "string",
    "description": "The CSS className for the element.",
    "default": "-"
  },
  {
    "attribute": "style",
    "type": "CSSProperties",
    "description": "The inline style for the element.",
    "default": "-"
  }
]