[
  {
    "attribute": "children",
    "type": "ReactNode",
    "description": "The content of the input.",
    "default": "-"
  },
  {
    "attribute": "variant",
    "type": "flat | bordered | faded | underlined",
    "description": "The variant of the input.",
    "default": "flat"
  },
  {
    "attribute": "color",
    "type": "default | primary | secondary | success | warning | danger",
    "description": "The color of the input.",
    "default": "default"
  },
  {
    "attribute": "size",
    "type": "sm | md | lg",
    "description": "The size of the input.",
    "default": "md"
  },
  {
    "attribute": "radius",
    "type": "none | sm | md | lg | full",
    "description": "The radius of the input.",
    "default": "-"
  },
  {
    "attribute": "label",
    "type": "ReactNode",
    "description": "The content to display as the label.",
    "default": "-"
  },
  {
    "attribute": "value",
    "type": "string",
    "description": "The current value of the input (controlled).",
    "default": "-"
  },
  {
    "attribute": "defaultValue",
    "type": "string",
    "description": "The default value of the input (uncontrolled).",
    "default": "-"
  },
  {
    "attribute": "placeholder",
    "type": "string",
    "description": "The placeholder of the input.",
    "default": "-"
  },
  {
    "attribute": "description",
    "type": "ReactNode",
    "description": "A description for the input. Provides a hint such as specific requirements for what to choose.",
    "default": "-"
  },
  {
    "attribute": "errorMessage",
    "type": "ReactNode | ((v: ValidationResult) => ReactNode)",
    "description": "An error message for the input. It is only shown when isInvalid is set to true",
    "default": "-"
  },
  {
    "attribute": "validate",
    "type": "(value: string) => ValidationError | true | null | undefined",
    "description": "Validate input values when committing (e.g. on blur), returning error messages for invalid values.",
    "default": "-"
  },
  {
    "attribute": "validationBehavior",
    "type": "native | aria",
    "description": "Whether to use native HTML form validation or ARIA validation. When wrapped in a Form component, the default is `aria`. Otherwise, the default is `native`.",
    "default": "native"
  },
  {
    "attribute": "minLength",
    "type": "number",
    "description": "The minimum length of the text input.",
    "default": "-"
  },
  {
    "attribute": "maxLength",
    "type": "number",
    "description": "The maximum length of the text input.",
    "default": "-"
  },
  {
    "attribute": "pattern",
    "type": "string",
    "description": "A regular expression that the input value is checked against.",
    "default": "-"
  },
  {
    "attribute": "type",
    "type": "text | email | url | password | tel | search | file",
    "description": "The type of the input.",
    "default": "text"
  },
  {
    "attribute": "startContent",
    "type": "ReactNode",
    "description": "Element to be rendered in the left side of the input.",
    "default": "-"
  },
  {
    "attribute": "endContent",
    "type": "ReactNode",
    "description": "Element to be rendered in the right side of the input.",
    "default": "-"
  },
  {
    "attribute": "labelPlacement",
    "type": "inside | outside | outside-left",
    "description": "The position of the label.",
    "default": "inside"
  },
  {
    "attribute": "fullWidth",
    "type": "boolean",
    "description": "Whether the input should take up the width of its parent.",
    "default": "true"
  },
  {
    "attribute": "isClearable",
    "type": "boolean",
    "description": "Whether the input should have a clear button.",
    "default": "false"
  },
  {
    "attribute": "isRequired",
    "type": "boolean",
    "description": "Whether user input is required on the input before form submission.",
    "default": "false"
  },
  {
    "attribute": "isReadOnly",
    "type": "boolean",
    "description": "Whether the input can be selected but not changed by the user.",
    "default": "false"
  },
  {
    "attribute": "isDisabled",
    "type": "boolean",
    "description": "Whether the input is disabled.",
    "default": "false"
  },
  {
    "attribute": "isInvalid",
    "type": "boolean",
    "description": "Whether the input is invalid.",
    "default": "false"
  },
  {
    "attribute": "baseRef",
    "type": "RefObject<HTMLDivElement>",
    "description": "The ref to the base element.",
    "default": "-"
  },
  {
    "attribute": "disableAnimation",
    "type": "boolean",
    "description": "Whether the input should be animated.",
    "default": "false"
  },
  {
    "attribute": "classNames",
    "type": "Partial<Record<'base' | 'label' | 'inputWrapper' | 'innerWrapper' | 'mainWrapper' | 'input' | 'clearButton' | 'helperWrapper' | 'description' | 'errorMessage', string>>",
    "description": "Allows to set custom class names for the Input slots.",
    "default": "-"
  }
]