[
  {
    "attribute": "children*",
    "type": "ReactNode[]",
    "description": "The children to render. Usually a list of SelectItem and SelectSection elements.",
    "default": "-"
  },
  {
    "attribute": "items",
    "type": "Iterable<T>",
    "description": "Item objects in the select. (dynamic)",
    "default": "-"
  },
  {
    "attribute": "selectionMode",
    "type": "single | multiple",
    "description": "The type of selection that is allowed in the collection.",
    "default": "-"
  },
  {
    "attribute": "selectedKeys",
    "type": "all | Iterable<React.Key>",
    "description": "The currently selected keys in the collection (controlled).",
    "default": "-"
  },
  {
    "attribute": "disabledKeys",
    "type": "Iterable<React.Key>",
    "description": "The item keys that are disabled. These items cannot be selected, focused, or otherwise interacted with.",
    "default": "-"
  },
  {
    "attribute": "defaultSelectedKeys",
    "type": "all | Iterable<React.Key>",
    "description": "The initial selected keys in the collection (uncontrolled).",
    "default": "-"
  },
  {
    "attribute": "variant",
    "type": "flat | bordered | faded | underlined",
    "description": "The variant of the select.",
    "default": "flat"
  },
  {
    "attribute": "color",
    "type": "default | primary | secondary | success | warning | danger",
    "description": "The color of the select.",
    "default": "default"
  },
  {
    "attribute": "size",
    "type": "sm | md | lg",
    "description": "The size of the select.",
    "default": "md"
  },
  {
    "attribute": "radius",
    "type": "none | sm | md | lg | full",
    "description": "The radius of the select.",
    "default": "-"
  },
  {
    "attribute": "placeholder",
    "type": "string",
    "description": "The placeholder of the select.",
    "default": "Select an option"
  },
  {
    "attribute": "labelPlacement",
    "type": "inside | outside | outside-left",
    "description": "The position of the label.",
    "default": "inside"
  },
  {
    "attribute": "label",
    "type": "ReactNode",
    "description": "The content to display as the label.",
    "default": "-"
  },
  {
    "attribute": "description",
    "type": "ReactNode",
    "description": "A description for the select. Provides a hint such as specific requirements for what to choose.",
    "default": "-"
  },
  {
    "attribute": "errorMessage",
    "type": "ReactNode | ((v: ValidationResult) => ReactNode)",
    "description": "An error message for the select.",
    "default": "-"
  },
  {
    "attribute": "startContent",
    "type": "ReactNode",
    "description": "Element to be rendered in the left side of the select.",
    "default": "-"
  },
  {
    "attribute": "endContent",
    "type": "ReactNode",
    "description": "Element to be rendered in the right side of the select.",
    "default": "-"
  },
  {
    "attribute": "selectorIcon",
    "type": "ReactNode",
    "description": "Element to be rendered as the selector icon.",
    "default": "-"
  },
  {
    "attribute": "scrollRef",
    "type": "React.RefObject<HTMLElement>",
    "description": "A ref to the scrollable element.",
    "default": "-"
  },
  {
    "attribute": "spinnerRef",
    "type": "React.RefObject<HTMLElement>",
    "description": "A ref to the spinner element.",
    "default": "-"
  },
  {
    "attribute": "maxListboxHeight",
    "type": "number",
    "description": "The maximum height of the listbox in pixels. Required when using virtualization.",
    "default": "256"
  },
  {
    "attribute": "itemHeight",
    "type": "number",
    "description": "The fixed height of each item in pixels. Required when using virtualization.",
    "default": "32"
  },
  {
    "attribute": "isVirtualized",
    "type": "boolean",
    "description": "Whether to enable virtualization. By default, it's enabled when the number of items exceeds 50.",
    "default": "undefined"
  },
  {
    "attribute": "fullWidth",
    "type": "boolean",
    "description": "Whether the select should take up the width of its parent.",
    "default": "true"
  },
  {
    "attribute": "isOpen",
    "type": "boolean",
    "description": "Whether the select is open by default (controlled).",
    "default": "-"
  },
  {
    "attribute": "defaultOpen",
    "type": "boolean",
    "description": "Whether the select is open by default (uncontrolled).",
    "default": "-"
  },
  {
    "attribute": "isRequired",
    "type": "boolean",
    "description": "Whether user select is required on the select before form submission.",
    "default": "false"
  },
  {
    "attribute": "isDisabled",
    "type": "boolean",
    "description": "Whether the select is disabled.",
    "default": "false"
  },
  {
    "attribute": "isMultiline",
    "type": "boolean",
    "description": "Whether the select should allow multiple lines of text.",
    "default": "false"
  },
  {
    "attribute": "isInvalid",
    "type": "boolean",
    "description": "Whether the select is invalid.",
    "default": "false"
  },
  {
    "attribute": "validationState",
    "type": "valid | invalid",
    "description": "Whether the select should display its \"valid\" or \"invalid\" visual styling. (Deprecated) use isInvalid instead.",
    "default": "-"
  },
  {
    "attribute": "showScrollIndicators",
    "type": "boolean",
    "description": "Whether the select should show scroll indicators when the listbox is scrollable.",
    "default": "true"
  },
  {
    "attribute": "autoFocus",
    "type": "boolean",
    "description": "Whether the select should be focused on the first mount.",
    "default": "false"
  },
  {
    "attribute": "disallowEmptySelection",
    "type": "boolean",
    "description": "Whether the collection allows empty selection.",
    "default": "false"
  },
  {
    "attribute": "disableAnimation",
    "type": "boolean",
    "description": "Whether the select should be animated.",
    "default": "true"
  },
  {
    "attribute": "disableSelectorIconRotation",
    "type": "boolean",
    "description": "Whether the select should disable the rotation of the selector icon.",
    "default": "false"
  },
  {
    "attribute": "hideEmptyContent",
    "type": "boolean",
    "description": "Whether the listbox will be prevented from opening when there are no items.",
    "default": "false"
  },
  {
    "attribute": "popoverProps",
    "type": "PopoverProps",
    "description": "Props to be passed to the popover component.",
    "default": "-"
  },
  {
    "attribute": "listboxProps",
    "type": "ListboxProps",
    "description": "Props to be passed to the listbox component.",
    "default": "-"
  },
  {
    "attribute": "scrollShadowProps",
    "type": "ScrollShadowProps",
    "description": "Props to be passed to the scroll shadow component.",
    "default": "-"
  },
  {
    "attribute": "classNames",
    "type": "Partial<Record<\"base\"｜ \"label\"｜ \"trigger\"｜ \"mainWrapper\" ｜ \"innerWrapper\"｜ \"selectorIcon\" ｜ \"value\" ｜ \"listboxWrapper\"｜ \"listbox\" ｜ \"popoverContent\" ｜ \"helperWrapper\" ｜ \"description\" ｜ \"errorMessage\", string>>",
    "description": "Allows to set custom class names for the Select slots.",
    "default": "-"
  }
]